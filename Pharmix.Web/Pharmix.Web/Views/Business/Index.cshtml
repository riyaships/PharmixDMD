@model SearchViewModel

@{
    ViewData["Title"] = "Business Dashboard";
}

<div class="form-horizontal">
    <div class="">
        <h2>Business Details</h2>
        <div class="form-group panel panel-default panel-body">
            <div class="row col-sm-6">
                @Html.DisplayFor(m => m)
            </div>
            <button type="button" class="btn btn-danger pull-right btn-px-120" id="btnCreateUser">Create New</button>
        </div>
    </div>
    <div id="divUserGrid"></div>
</div>
<script src="~/lib/jquery-validation/dist/jquery.validate.js"></script>
<script>
    (function ($) {

        $("#SearchText").on("input",
            function() {
                $("#linkSearch").trigger("click");
            });

        var initializeFormEvents = function() {
            $("#btnSaveUser").click(function () {
                if ($("#BusinessNewUser").valid()) {
                    var callbackSave = function (response) {
                        $("#linkSearch").trigger("click");
                        $("#BusinessNewUser").closest(".modal").modal("hide");
                    };

                    var request = $("#BusinessNewUser").serialize();

                    Framework.Utility.ExecuteAjaxRequest("@Url.Action("Save")", request, callbackSave);
                    return false;
                }
                else
                    return false;
            });

              $('#BusinessUser').validate({
            errorClass: 'help-block animation-slideDown', // You can change the animation class for a different entrance animation - check animations page
            errorElement: 'div',
            errorPlacement: function (error, e) {
                e.parents('.form-group > div').append(error);
            },
            highlight: function (e) {

                $(e).closest('.form-group').removeClass('has-success has-error').addClass('has-error');
                $(e).closest('.help-block').remove();
            },
            success: function (e) {
                e.closest('.form-group').removeClass('has-success has-error');
                e.closest('.help-block').remove();
            },
            rules: {
                'Email': {
                    required: true,
                    email: true
                },

                'Password': {
                    required: true,
                    minlength: 6
                },

                'ConfirmPassword': {
                    required: true,
                    equalTo: '#Password'
                }
            },
            messages: {
                'Email': 'Please enter valid email address',

                'Password': {
                    required: 'Please provide a password',
                    minlength: 'Your password must be at least 6 characters long'
                },

                'ConfirmPassword': {
                    required: 'Please provide a password',
                    minlength: 'Your password must be at least 6 characters long',
                    equalTo: 'Please enter the same password as above'
                }
            }
        });


            $("#btnbusinessSaveUser").click(function () {
                if ($("#BusinessUser").valid()) {
                    var callbackSave = function (response) {                       
                        $("#linkSearch").trigger("click");
                        var errorMessage = $(response).find('#hdnerrorMessage').text();                       
                        $('#divRoleGrid').html(errorMessage);
                       
                        if (errorMessage == "")
                            $("#BusinessUser").closest(".modal").modal("hide");
                        else
                            return false;
                    };

                    var request = $("#BusinessUser").serialize();
                  
                    Framework.Utility.ExecuteAjaxRequest("@Url.Action("BusinessUserSave")", request, callbackSave);
                    return false;
                }
                else
                    return false;
            });
        }

        var showPopup = function (id) {
            var callback = function (response) {
                Framework.Popup.CreateInfoPopup(id > 0 ? "Edit User" : "Create User", response, null, null, null, true, initializeFormEvents);
            };

            Framework.Utility.ExecuteAjaxRequest("@Url.Action("Get")", { Id: id }, callback);
        }

        var performDeletion = function (id) {
            var deleteProduct = function () {
                var callback = function() {
                    $("#linkSearch").trigger("click");
                };
                Framework.Utility.ExecuteAjaxRequest("@Url.Action("Delete")", { Id: id }, callback);
            }

            Framework.Popup.CreateConfirmationPopup("Confrim Deletion", "Are you sure want to delete this item?", deleteProduct);
        }

        var managebusinessuser = function (id) {
           
            var callback = function (response) {
                Framework.Popup.CreateInfoPopup(id > 0 ? "Edit Business" : "Create Business", response, null, null, null, true, initializeFormEvents);
            };

            Framework.Utility.ExecuteAjaxRequest("@Url.Action("ManageUser")", { Id: id }, callback);
        }

        $("#btnCreateUser").click(function () {

            showPopup(0);
            return false;
        });

        $("#divUserGrid").on("click", "table tbody a", function () {
            var id = $(this).closest("tr").data("id");
            var $iconAction = $(this).find(".fa");

            if ($iconAction.hasClass("fa-edit")) {
                showPopup(id);
            } else if ($iconAction.hasClass("fa-trash")) {
                performDeletion(id);
            }
            else if ($iconAction.hasClass("fa-cog")) {
                 
                managebusinessuser(id);
            }

            return $(this).attr("href") !== "#";
        });

        $("#linkSearch").click(function () {
            var callback = function (response) {
                $("#divUserGrid").html(response);
            };

            var searchText = $("#SearchText").val();

            Framework.Utility.ExecuteAjaxRequest("@Url.Action("Search")", { Page: 1, SearchText: searchText }, callback);
            return false;
        });

        setTimeout(function() {
            $("#linkSearch").trigger("click");
        }, 200);
    })(jQuery)
</script>
