@model SearchViewModel

@{
    ViewData["Title"] = "Site Dashboard";
}

<div class="form-horizontal">
    <div class="">
        <h2>Role Dashboard</h2>
        <div class="form-group panel panel-default panel-body">
            <div class="row col-sm-6">
                @Html.DisplayFor(m => m)
            </div>
            @*<button type="button" class="btn btn-danger pull-right" id="btnCreateSite">Create New</button>*@
        </div>
    </div>
    <div id="divRoleGrid"></div>
</div>
<script src="~/lib/jquery-validation/dist/jquery.validate.js"></script>
<script>
    (function ($) {
        $("#SearchText").on("input",
            function() {
                $("#linkSearch").trigger("click");
            });

 

        var showPopup = function(id) {
            var callback = function (response) {
                Framework.Popup.CreateInfoPopup(id > 0 ? "Edit Site" : "Create Site", response, null, null, null, true, initializeFormEvents);
            };

            Framework.Utility.ExecuteAjaxRequest("@Url.Action("Get")", { Id: id }, callback);
        }

        var performDeletion = function (id) {
            var deleteProduct = function () {
                var callback = function() {
                    $("#linkSearch").trigger("click");
                };
                Framework.Utility.ExecuteAjaxRequest("@Url.Action("Delete")", { Id: id }, callback);
            }

            Framework.Popup.CreateConfirmationPopup("Confrim Deletion", "Are you sure want to delete this item?", deleteProduct);
        }

        $("#btnCreateSite").click(function () {
            showPopup(0);
            return false;
        });

        $("#divSiteGrid").on("click", "table tbody a", function () {
            var id = $(this).closest("tr").data("id");
            var $iconAction = $(this).find(".fa");

            if ($iconAction.hasClass("fa-edit")) {
                showPopup(id);
            } else if ($iconAction.hasClass("fa-trash")) {
                performDeletion(id);
            }

            return $(this).attr("href") !== "#";
        });

        $("#linkSearch").click(function () {
            var callback = function (response) {
                $("#divRoleGrid").html(response);
            };

            var searchText = $("#SearchText").val();

            Framework.Utility.ExecuteAjaxRequest("@Url.Action("SearchRole")", { Page: 1, SearchText: searchText }, callback);
            return false;
        });

        setTimeout(function() {
            $("#linkSearch").trigger("click");
        }, 200);
    })(jQuery)
</script>
