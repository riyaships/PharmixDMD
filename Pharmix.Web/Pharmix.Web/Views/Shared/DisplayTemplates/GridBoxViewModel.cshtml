@model GridBoxViewModel
@using X.PagedList.Mvc.Common
@using X.PagedList.Mvc.Core

<div id="@(Model.GridName)" class="row">
    @if (Model.Rows != null && Model.Rows.Count > 0)
    {
        var searchUrl = Url.Action(Model.PagingAction, Model.PagingRoute, new { page = Model.Rows.PageNumber });

        @Html.Hidden("GridSortOrder", "asc")
        @Html.Hidden("GridSortBy", "")

        <div class="table table-condensed table-hover table-responsive">
            <div>
                @if (Model.Rows != null)
                {
                    foreach (var row in Model.Rows)
                    {
                        <div class="col-sm-4">
                            <div class="box box-info" data-id="@row.IdentityValue">
                                <div class="box-header with-border">
                                    <h3 class="box-title">
                                        <span class="@Model.BackgroundIconCss"></span>
                                        @row.BoxHeading
                                    </h3>
                                    <div class="box-tools pull-right">
                                        <!-- Collapse Button -->
                                        <button type="button" class="btn btn-box-tool" data-widget="expaned">
                                            <i class="fa fa-minus"></i>
                                        </button>
                                    </div>
                                    <!-- /.box-tools -->
                                </div>
                                <!-- /.box-header -->
                                <div class="box-body">
                                    @foreach (var dic in row.BoxBodyDictionary)
                                    {
                                        <div class="form-group col-sm-12">
                                            <label asp-for="@dic.Value">@dic.Key : </label>
                                            <span class="form-control-static col-sm">@dic.Value</span>
                                        </div>
                                    }
                                    <div class="icon">
                                        <i class="@Model.BackgroundIconCss"></i>
                                    </div>
                                </div>
                                <!-- /.box-body -->
                                <div class="box-footer">
                                    @if (row.ActionLinks.Any())
                                    {
                                        foreach (var link in row.ActionLinks)
                                        {
                                            if (string.IsNullOrEmpty(link.IconCss))
                                            {
                                                <a class="btn-sm link-action" data-linkval="@link.LinkText" href="@link.LinkUrl">@link.LinkText</a>
                                            }
                                            else
                                            {
                                                <span class="btn-sm">
                                                    <a class="btn-sm link-icon" href="@link.LinkUrl">
                                                        <span class="fa-2x @link.IconCss" title="@link.LinkTitleText"></span>
                                                    </a>
                                                </span>
                                            }

                                        }
                                    }
                                </div>
                                <!-- box-footer -->
                            </div>
                        </div>
                    }
                }
            </div>
        </div>
        if (!Model.HideFooter && Model.Rows != null)
        {
            <div class="text-center">
                <span>Page @(Model.Rows.PageCount < Model.Rows.PageNumber ? 0 : Model.Rows.PageNumber) of @Model.Rows.PageCount</span>
                <span class="pull-right">
                    <label asp-for="Rows.PageSize">Page Size&nbsp;</label>
                    <select class="input-sm" asp-for="Rows.PageSize" id="@(Model.GridName + "PageSize")">
                        <option value="10" selected="selected">10</option>
                        <option value="25">25</option>
                        <option value="50">50</option>
                        <option value="100">100</option>
                    </select>
                </span>
                @if (Model.Rows.TotalItemCount > Model.Rows.PageSize)
                {
                    <span class="" id="@(Model.GridName + "Pagination")">
                        @Html.PagedListPager(Model.Rows, page => Url.Action(Model.PagingAction, Model.PagingRoute, new { page }), new PagedListRenderOptions() { DisplayLinkToLastPage = PagedListDisplayMode.IfNeeded, DisplayLinkToFirstPage = PagedListDisplayMode.IfNeeded })
                    </span>
                }
            </div>
        }

        <script>
            (function ($) {
                var triggerSearch = function (url) {
                    var callback = function (response) {
                        $("@("#" + Model.GridName)").replaceWith(response);
                    };

                    var sortByVal = $("#GridSortBy").val();
                    var sortOrderVal = $("#GridSortOrder").val();
                    var searchText = $("#SearchText").val();
                    var pageSize = $("#@(Model.GridName + "PageSize")").val();

                    Framework.Utility.ExecuteAjaxRequest(url, { SearchText: searchText, SortBy: sortByVal, SortOrder: sortOrderVal, PageSize: pageSize }, callback, null, 200);
                }

                $("#@(Model.GridName + "PageSize")").change(function(e) {
                    e.preventDefault();
                    triggerSearch("@searchUrl");
                    return false;
                });

                $("@("#" + Model.GridName + "Pagination a")").click(function (e) {
                    e.preventDefault();
                    triggerSearch($(this).attr("href"));
                    return false;
                });

                $("#@(Model.GridName + "")").on("click", ".btn-box-tool", function (e) {
                    $(this).closest(".box").boxWidget('toggle');
                });

                @*$("#@(Model.GridName + " .box")").on('expanded.boxwidget', function () {
                    $(this).find(".con").show();
                }).on('collapsed.boxwidget', function () {
                    $(this).find(".con").hide();
                });*@
            })(jQuery)
        </script>

    }
    else
    {
        <div class="no-result text-center text-danger">
            <i class="fa fa-frown-o fa-2x" aria-hidden="true"></i>
            <h4>No data found..</h4>
        </div>
    }
</div>